from django.utils import timezone


RUSSIAN_MONTHS = {
    1: '—è–Ω–≤–∞—Ä—è', 2: '—Ñ–µ–≤—Ä–∞–ª—è', 3: '–º–∞—Ä—Ç–∞', 4: '–∞–ø—Ä–µ–ª—è',
    5: '–º–∞—è', 6: '–∏—é–Ω—è', 7: '–∏—é–ª—è', 8: '–∞–≤–≥—É—Å—Ç–∞',
    9: '—Å–µ–Ω—Ç—è–±—Ä—è', 10: '–æ–∫—Ç—è–±—Ä—è', 11: '–Ω–æ—è–±—Ä—è', 12: '–¥–µ–∫–∞–±—Ä—è'
}

UNIT_FORMS = {
    '—Å—Ç–∞–∫–∞–Ω': {'one': '—Å—Ç–∞–∫–∞–Ω', 'few': '—Å—Ç–∞–∫–∞–Ω–∞', 'many': '—Å—Ç–∞–∫–∞–Ω–æ–≤'},
    '–≥—Ä–∞–º–º': {'one': '–≥—Ä–∞–º–º', 'few': '–≥—Ä–∞–º–º–∞', 'many': '–≥—Ä–∞–º–º–æ–≤'},
    '–ª–æ–∂–∫–∞': {'one': '–ª–æ–∂–∫–∞', 'few': '–ª–æ–∂–∫–∏', 'many': '–ª–æ–∂–µ–∫'},
    '—Å—Ç–æ–ª–æ–≤–∞—è –ª–æ–∂–∫–∞': {'one': '—Å—Ç–æ–ª–æ–≤–∞—è –ª–æ–∂–∫–∞', 'few': '—Å—Ç–æ–ª–æ–≤—ã–µ –ª–æ–∂–∫–∏',
                       'many': '—Å—Ç–æ–ª–æ–≤—ã—Ö –ª–æ–∂–µ–∫'},
    '—á–∞–π–Ω–∞—è –ª–æ–∂–∫–∞': {'one': '—á–∞–π–Ω–∞—è –ª–æ–∂–∫–∞', 'few': '—á–∞–π–Ω—ã–µ –ª–æ–∂–∫–∏',
                     'many': '—á–∞–π–Ω—ã—Ö –ª–æ–∂–µ–∫'},
    '—à—Ç—É–∫–∞': {'one': '—à—Ç—É–∫–∞', 'few': '—à—Ç—É–∫–∏', 'many': '—à—Ç—É–∫'},
    '–∑—É–±—á–∏–∫': {'one': '–∑—É–±—á–∏–∫', 'few': '–∑—É–±—á–∏–∫–∞', 'many': '–∑—É–±—á–∏–∫–æ–≤'},
    '–ø—É—á–æ–∫': {'one': '–ø—É—á–æ–∫', 'few': '–ø—É—á–∫–∞', 'many': '–ø—É—á–∫–æ–≤'},
    '—â–µ–ø–æ—Ç–∫–∞': {'one': '—â–µ–ø–æ—Ç–∫–∞', 'few': '—â–µ–ø–æ—Ç–∫–∏', 'many': '—â–µ–ø–æ—Ç–æ–∫'},
    '–º–ª': {'one': '–º–ª.', 'few': '–º–ª.', 'many': '–º–ª.'},
    '–ª': {'one': '–ª.', 'few': '–ª.', 'many': '–ª.'},
    '–≥': {'one': '–≥—Ä.', 'few': '–≥—Ä.', 'many': '–≥—Ä.'},
    '–∫–≥': {'one': '–∫–≥.', 'few': '–∫–≥.', 'many': '–∫–≥.'},
}


def get_correct_unit_form(amount, unit):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ–æ—Ä–º—É –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è"""
    if unit not in UNIT_FORMS:
        return unit

    if amount % 10 == 1 and amount % 100 != 11:
        return UNIT_FORMS[unit]['one']
    elif 2 <= amount % 10 <= 4 and (amount % 100 < 10 or amount % 100 >= 20):
        return UNIT_FORMS[unit]['few']
    else:
        return UNIT_FORMS[unit]['many']


INGREDIENT_FORMAT = "üìå {idx}. {name} - {total_amount} {unit}"
RECIPE_FORMAT = "üçΩÔ∏è {idx}. {name} (–∞–≤—Ç–æ—Ä: @{author})"
SEPARATOR = '-' * 50


def generate_shopping_list_content(ingredients, recipes):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫"""
    current_date = timezone.now()
    day = current_date.day
    month = RUSSIAN_MONTHS[current_date.month]
    year = current_date.year

    return '\n'.join([
        SEPARATOR,
        'üõí Foodgram - –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫',
        f'üìÖ –î–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: {day} {month} {year}',
        SEPARATOR,
        '–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:',
        *[
            INGREDIENT_FORMAT.format(
                idx=idx,
                name=' '.join(item['name'].split()).capitalize(),
                total_amount=item['total_amount'],
                unit=get_correct_unit_form(item['total_amount'], item['unit'])
            )
            for idx, item in enumerate(ingredients, 1)
        ],
        SEPARATOR,
        '–†–µ—Ü–µ–ø—Ç—ã:',
        *[
            RECIPE_FORMAT.format(
                idx=idx,
                name=recipe.name,
                author=recipe.author.username
            )
            for idx, recipe in enumerate(recipes, 1)
        ],
        SEPARATOR,
        f'\n–í—Å–µ–≥–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: {len(ingredients)}',
        f'–í—Å–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: {len(recipes)}\n',
        SEPARATOR
    ])
